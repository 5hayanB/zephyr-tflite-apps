ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           RISC-V
  Version:                           0x1
  Entry point address:               0x80000000
  Start of program headers:          64 (bytes into file)
  Start of section headers:          5444800 (bytes into file)
  Flags:                             0x1, RVC, soft-float ABI
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         3
  Size of section headers:           64 (bytes)
  Number of section headers:         32
  Section header string table index: 31

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] vector            PROGBITS         0000000080000000  000000e8
       0000000000000018  0000000000000000  AX       0     0     4
  [ 2] rom_start         NOBITS           0000000080000018  00000100
       0000000000000008  0000000000000000  WA       0     0     1
  [ 3] reset             PROGBITS         0000000080000020  00000100
       0000000000000006  0000000000000000  AX       0     0     4
  [ 4] exceptions        PROGBITS         0000000080000028  00000108
       000000000000017a  0000000000000000  AX       0     0     4
  [ 5] text              PROGBITS         00000000800001a4  00000284
       000000000000eb6c  0000000000000000  AX       0     0     4
  [ 6] initlevel         PROGBITS         000000008000ed10  0000edf0
       0000000000000060  0000000000000000   A       0     0     8
  [ 7] devices           PROGBITS         000000008000ed70  0000ee50
       0000000000000030  0000000000000000   A       0     0     8
  [ 8] sw_isr_table      PROGBITS         000000008000eda0  0000ee80
       0000000000000400  0000000000000000  WA       0     0     8
  [ 9] device_handles    PROGBITS         000000008000f1a0  0000f280
       0000000000000006  0000000000000000   A       0     0     2
  [10] ctors             PROGBITS         000000008000f1a6  0000f286
       0000000000000012  0000000000000000  WA       0     0     1
  [11] init_array        PROGBITS         000000008000f1b8  0008dcc8
       0000000000000000  0000000000000000   W       0     0     1
  [12] rodata            PROGBITS         000000008000f1c0  0000f2a0
       000000000007e86c  0000000000000000   A       0     0     16
  [13] bss               NOBITS           000000008008da30  0008db0c
       0000000000019af0  0000000000000000  WA       0     0     8
  [14] noinit            NOBITS           00000000800a7520  0008db0c
       0000000000003fd0  0000000000000000  WA       0     0     16
  [15] datas             PROGBITS         00000000800ab4f0  0008db10
       0000000000000104  0000000000000000  WA       0     0     8
  [16] device_states     PROGBITS         00000000800ab5f8  0008dc18
       0000000000000004  0000000000000000  WA       0     0     8
  [17] k_mutex_area      PROGBITS         00000000800ab600  0008dc20
       0000000000000060  0000000000000000  WA       0     0     8
  [18] k_sem_area        PROGBITS         00000000800ab660  0008dc80
       0000000000000048  0000000000000000  WA       0     0     8
  [19] .comment          PROGBITS         0000000000000000  0008dcc8
       0000000000000020  0000000000000001  MS       0     0     1
  [20] .debug_aranges    PROGBITS         0000000000000000  0008dcf0
       0000000000003a20  0000000000000000           0     0     16
  [21] .debug_info       PROGBITS         0000000000000000  00091710
       00000000002e3f19  0000000000000000           0     0     1
  [22] .debug_abbrev     PROGBITS         0000000000000000  00375629
       000000000001ce18  0000000000000000           0     0     1
  [23] .debug_line       PROGBITS         0000000000000000  00392441
       000000000004eeb2  0000000000000000           0     0     1
  [24] .debug_frame      PROGBITS         0000000000000000  003e12f8
       0000000000009cd0  0000000000000000           0     0     8
  [25] .debug_str        PROGBITS         0000000000000000  003eafc8
       00000000000c6a2a  0000000000000001  MS       0     0     1
  [26] .debug_loc        PROGBITS         0000000000000000  004b19f2
       000000000005b1fb  0000000000000000           0     0     1
  [27] .debug_ranges     PROGBITS         0000000000000000  0050cbf0
       0000000000015910  0000000000000000           0     0     16
  [28] .riscv.attributes RISCV_ATTRIBUTE  0000000000000000  00522500
       000000000000002f  0000000000000000           0     0     1
  [29] .symtab           SYMTAB           0000000000000000  00522530
       0000000000007188  0000000000000018          30   360     8
  [30] .strtab           STRTAB           0000000000000000  005296b8
       0000000000007cc8  0000000000000000           0     0     1
  [31] .shstrtab         STRTAB           0000000000000000  00531380
       0000000000000140  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  p (processor specific)

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  LOAD           0x00000000000000e8 0x0000000080000000 0x0000000080000000
                 0x0000000000000018 0x0000000000000020  RWE    0x4
  LOAD           0x0000000000000100 0x0000000080000020 0x0000000080000020
                 0x000000000008da0c 0x00000000000ab4d0  RWE    0x10
  LOAD           0x000000000008db10 0x00000000800ab4f0 0x00000000800ab4f0
                 0x00000000000001b8 0x00000000000001b8  RW     0x8

 Section to Segment mapping:
  Segment Sections...
   00     vector rom_start 
   01     reset exceptions text initlevel devices sw_isr_table device_handles ctors rodata bss noinit 
   02     datas device_states k_mutex_area k_sem_area 
